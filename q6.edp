//---------------------------------------------------------------------//
//
//  Simulation of the linear Stokes equation in fix 3D form 
//
//  Authors: Chongmo LIU
//           Tiago Lobato Gimenes
//
//---------------------------------------------------------------------//

//---------------------------------------------------------------------//
// Solver for the linear problem
//---------------------------------------------------------------------//

//---------------------------------------------------------------------//
// Constants definitions
//---------------------------------------------------------------------//
//Module de Young (toujours positif)
real E=15.;	
		
//Coefficient de Poisson (entre -1 et 1/2)
real nu=0.35;

//Coefficients de Lame
real lambda=E*nu/((1.+nu)*(1.-2.*nu));
real mu=E/(2.*(1.+nu));

// nu du fluide
real nuFluide=0.01;

// mesh density
int Nbnoeuds=10;
real L = 1;
real Ly = L;
real Lx = 3*Ly;
real y0 = Ly;

// Time step
real delta = 1;

//---------------------------------------------------------------------//
// Mesh
//---------------------------------------------------------------------//
mesh Th=square(Lx*Nbnoeuds,Ly*Nbnoeuds,[Lx*x,0.1*Ly*y+y0]);
mesh Sk=square(Lx*Nbnoeuds,Ly*Nbnoeuds,[Lx*x,Ly*y]);

//---------------------------------------------------------------------//
// Espaces EF et fonctions discretes
//---------------------------------------------------------------------//
// Deformation
fespace Vh(Th,P1);
fespace Wh(Th,[P1,P1]);

// StokesInit
fespace Xh(Sk, P2);
fespace Mh(Sk, P1);

// Deformation
Wh [uh1,uh2],[vh1,vh2];	

// StokesInit
Xh u2, v2;
Xh u1, v1;
Mh p,q;

//---------------------------------------------------------------------//
// Solves the linear Stokes formula
//---------------------------------------------------------------------//
problem StokesInit(u1, u2, p, v1, v2, q, solver=Crout)=
    int2d(Sk)(nu*(dx(u1)*dx(v1)+dy(u1)*dy(v1)+dx(u2)*dx(v2)+dy(u2)*dy(v2))
    -p*q*(0.000001)-p*dx(v1)-p*dy(v2)-dx(u1)*q-dy(u2)*q)
    +on(1, u2=0) // Vitesse horizontalle
    +on(3, u1=0,u2=0.1)
    +on(4, u1=-y^2+y0^2, u2=0)
;

//---------------------------------------------------------------------//
// Formulation du probleme lineaire 
//---------------------------------------------------------------------//
problem elasticite([uh1,uh2],[vh1,vh2],solver=LU) =
     int2d(Th)(2*mu*(2*dx(uh1)*dx(vh1)+2*dy(uh2)*dy(vh2) + 0.5*(dx(uh2)+dy(uh1))*(dx(vh2)+dy(vh1))))
    +int2d(Th)(lambda*(dx(uh1)+dy(uh2))*(dx(vh1)+dy(vh2)))
    +on(1,uh1=u1*delta, uh2=u2*delta)
    +on(4,uh1=0,uh2=0)
    +on(2,uh1=0,uh2=0)
;

//---------------------------------------------------------------------//
// Main
//---------------------------------------------------------------------//

// Plots the solution for the second time
StokesInit; 

elasticite; 

plot(p,[u1, u2], [uh1, uh2]);

mesh Sh;
real scale=1;
Sh=movemesh(Th,[x+scale*uh1,y+scale*uh2]);
plot(Sh);
